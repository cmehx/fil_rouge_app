name: Build and deploy a docker image to azure image registery

on: push
  # pull_request:
  #  branches: ["develop","main"]

env:
  AZURE_CONTAINER_REGISTRY: "filrougeregistry"
  CONTAINER_NAME: "fil_rouge"
  RESOURCE_GROUP: "fil_rouge_grp"
  CL_RESOURCE_GROUP: "fil_rouge_grp_dev"
  CLUSTER_NAME: "fil-rouge-aks-dev"
  DEPLOYMENT_MANIFEST_PATH: ".k8s/"

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3
      - name: Sets env vars for release
        run: |
          echo "ENVC=staged" >> $GITHUB_ENV
        if: github.ref_name == 'develop'

          # This step is run when the tag is staging-XXX
      - name: Sets env vars for staging
        run: |
          echo "ENVC=develop" >> $GITHUB_ENV
        if: github.ref_name != 'develop'

          # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.ENVC }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} ./app
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DEV_APP }}
          SLACK_MESSAGE: 'Connection Ã  Azure build et push de l\image sur le registery azure'
          SLACK_TITLE: 'Azure login/ build & push de l\image'
          SLACK_USERNAME: 'Github_Action'
          SLACK_COLOR: ${{ job.status }}

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      - uses: actions/checkout@v3
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.CL_RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/fil_rouge:develop
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DEV_APP }}
          SLACK_MESSAGE: 'deploy kubernetes cluster'
          SLACK_TITLE: 'k8s deployment'
          SLACK_USERNAME: 'Github_Action'
          SLACK_COLOR: ${{ job.status }}
